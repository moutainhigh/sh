// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.14/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/maybe ../../../../geometry/support/aaBoundingRect ../../../../geometry/support/centroid ../../../../geometry/support/jsonUtils ../../../../geometry/support/quantizationUtils ../../../../layers/graphics/featureConversionUtils ../../../../layers/graphics/OptimizedGeometry ./graphicsUtils".split(" "),function(n,p,r,t,u,h,k,d,q,l){Object.defineProperty(p,"__esModule",{value:!0});var c=new q.default,g=new q.default;n=function(){function a(){this.bounds=t.create();
this.graphic=null;this.size=[0,0,0,0]}a.acquire=function(b,m,v,c,e){void 0===b&&(b=null);var f;0===a._pool.length?f=new a:(f=a._pool.pop(),this._set.delete(f));f.acquire(b,m,v,c,e);return f};a.release=function(b){b&&!this._set.has(b)&&(b.release(),this._pool.push(b),this._set.add(b))};a.getCentroidQuantized=function(b,m){if(h.isPolygon(b.geometry)){var a=b.symbol;if(r.isNone(a))return null;if(l.isMarkerSymbol(a.type))return b=u.polygonCentroid(b.geometry),k.quantizePoint(m,{},{x:b[0],y:b[1]},!1,!1)}return null};
a.prototype.acquire=function(b,a,c,d,e){void 0===b&&(b=null);b&&this.set(b,a,c,d,e)};a.prototype.release=function(){this.geometry=this.symbol=this.graphic=null};a.prototype.set=function(b,a,c,d,e){this.graphic=b;this.geometry=c;this.symbol=a.symbol;l.getBounds(this.bounds,this.size,a.symbol,c,a.mosaicItem,d,e)};a.prototype.updateBounds=function(b,a,c){l.getBounds(this.bounds,this.size,b,this.geometry,null,a,c)};a.prototype.getGeometryQuantized=function(b){if(h.isPolygon(this.geometry)){var a=this.geometry.rings;
if(1===a.length&&2===a[0].length)return k.quantizeGeometry(b,{paths:[[a[0][0],a[0][1]]]})}else if(h.isPolyline(this.geometry))return c.coords.length=0,c.lengths.length=0,g.coords.length=0,g.lengths.length=0,d.convertFromPolyline(c,this.geometry),d.generalizeOptimizedGeometry(g,c,this.geometry.hasZ,this.geometry.hasM,"esriGeometryPolyline",b.scale[0]),d.quantizeOptimizedGeometry(c,g,this.geometry.hasZ,this.geometry.hasM,"esriGeometryPolyline",b),d.convertToPolyline(c,this.geometry.hasZ,this.geometry.hasM);
return k.quantizeGeometry(b,this.geometry)};a._pool=[];a._set=new Set;return a}();p.default=n});