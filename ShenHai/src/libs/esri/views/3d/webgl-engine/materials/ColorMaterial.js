// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.14/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/tsSupport/assignHelper ../../../../core/tsSupport/extendsHelper ../lib/GLMaterial ../lib/Material ./internal/DefaultBufferWriter ./internal/MaterialUtil ./internal/MaterialUtil ./renderers/MergedRenderer ../shaders/ColorMaterialTechnique".split(" "),function(f,u,g,d,e,m,h,n,k,p,l){f=function(c){function a(a,b){b=c.call(this,b)||this;b.supportsEdges=!0;b.techniqueConfig=new l.ColorMaterialTechniqueConfiguration;b.params=k.copyParameters(a,q);return b}d(a,c);
a.prototype.setParameterValues=function(a){n.updateParameters(this.params,a)&&this.notifyDirty("matChanged")};a.prototype.getParameters=function(){return this.params};a.prototype.getTechniqueConfig=function(a){this.techniqueConfig.output=a;this.techniqueConfig.cullFace=this.params.cullFace;this.techniqueConfig.vertexColors=this.params.vertexColors;this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled;this.techniqueConfig.transparent=this.params.transparent;this.techniqueConfig.polygonOffset=
this.params.polygonOffset;this.techniqueConfig.writeDepth=this.params.writeDepth;return this.techniqueConfig};a.prototype.getPassParameters=function(){return this.params};a.prototype.intersect=function(a,b,c,d,e,f,g){k.intersectTriangleGeometry(a,b,d,e,f,void 0,g)};a.prototype.getGLMaterials=function(){return{color:r,depthShadowMap:void 0,normal:void 0,depth:void 0,highlight:t}};a.prototype.createBufferWriter=function(){return new h.DefaultBufferWriter(h.PositionColorLayout)};a.prototype.createRenderer=
function(a,b){return new p(a,b,this)};return a}(m.Material);e=function(c){function a(a){var b=c.call(this,a)||this;b.output=a.output;b.updateParameters();return b}d(a,c);a.prototype.updateParameters=function(){this.technique=this.techniqueRep.acquireAndReleaseExisting(l.ColorMaterialTechnique,this.material.getTechniqueConfig(this.output),this.technique)};a.prototype.beginSlot=function(a){if(4===this.output)return 4===a;var b=4;this.technique.configuration.transparent&&(b=this.technique.configuration.writeDepth?
6:9);return a===b};a.prototype.getProgram=function(){return this.technique.program};a.prototype.getPrograms=function(){return null};a.prototype.bind=function(a,b){a.bindProgram(this.technique.program);this.technique.bindPipelineState(a);this.technique.bindPass(a,this.material.getPassParameters(),b)};a.prototype.release=function(){};a.prototype.bindView=function(a){this.technique.bindDraw(a)};a.prototype.bindInstance=function(a){this.technique.bindInstance(a)};a.prototype.getDrawMode=function(){return 4};
return a}(e.GLMaterial);var r=function(c){function a(a){return c.call(this,g({},a,{output:0}))||this}d(a,c);return a}(e),t=function(c){function a(a){return c.call(this,g({},a,{output:4}))||this}d(a,c);return a}(e),q={color:[1,1,1,1],transparent:!1,writeDepth:!0,vertexColors:!1,polygonOffset:!1,slicePlaneEnabled:!1,cullFace:0};return f});