// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.14/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/tsSupport/assignHelper ../../../../core/tsSupport/extendsHelper ../../../../core/mathUtils ../../../../geometry/support/aaBoundingBox ../../support/buffer/BufferView ../../support/buffer/InterleavedLayout ../lib/geometryDataUtils ../lib/GLMaterial ../lib/Material ../lib/Util ./PathTechnique ./VisualVariableMaterialParameters ./internal/bufferWriterUtils ./internal/MaterialUtil ./internal/MaterialUtil ./renderers/MergedRenderer".split(" "),function(k,J,f,g,
n,r,t,u,v,h,w,x,e,y,l,z,p,A){var B=x.assert;k=function(c){function a(b,d){d=c.call(this,d)||this;d.supportsEdges=!0;d.techniqueConfig=new e.PathTechniqueConfiguration;d.params=p.copyParameters(b,C);d.vertexBufferLayout=a.getVertexBufferLayout(d.params);return d}g(a,c);a.prototype.getTechniqueConfig=function(b){this.techniqueConfig.output=b;this.techniqueConfig.vvSize=this.params.vvSizeEnabled;this.techniqueConfig.vvColor=this.params.vvColorEnabled;this.techniqueConfig.vvOpacity=this.params.vvOpacityEnabled;
this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled;this.techniqueConfig.transparent=this.params.transparent;0===b&&(this.techniqueConfig.doubleSidedMode=this.params.doubleSided&&"normal"===this.params.doubleSidedType?1:this.params.doubleSided&&"winding-order"===this.params.doubleSidedType?2:0,this.techniqueConfig.receiveShadows=this.params.receiveShadows,this.techniqueConfig.receiveSSAO=this.params.receiveSSAO);return this.techniqueConfig};a.prototype.getPassParameters=function(){return this.params};
a.prototype.isVisibleInPass=function(b){return 3===b?this.params.castShadows:!0};a.prototype.isVisible=function(){var b=this.params;return c.prototype.isVisible.call(this)?0<b.opacity:!1};a.prototype.setParameterValues=function(b){z.updateParameters(this.params,b)&&this.notifyDirty("matChanged")};a.prototype.getParameters=function(){return this.params};a.prototype.intersect=function(b,a,c,e,m,g,h){if(b.metadata){a=b.metadata.pathGeometry;c=[this.params.size[0],this.params.size[1]];if(this.params.vvSizeEnabled){var d=
this.params.vvSizeOffset,f=this.params.vvSizeFactor,q=this.params.vvSizeMinSize,k=this.params.vvSizeMaxSize,l=a.sizeAttributeValue;c[0]*=n.clamp(d[0]+l*f[0],q[0],k[0]);c[1]*=n.clamp(d[1]+l*f[1],q[1],k[1])}d=Math.max(c[0],c[1]);b=r.fromValues(b.boundingInfo.bbMin[0]-d,b.boundingInfo.bbMin[1]-d,b.boundingInfo.bbMin[2]-d,b.boundingInfo.bbMax[0]+d,b.boundingInfo.bbMax[1]+d,b.boundingInfo.bbMax[2]+d);d=[g[0]-m[0],g[1]-m[1],g[2]-m[2]];f=Math.sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);p.intersectAabbInvDir(b,m,
[f/d[0],f/d[1],f/d[2]],e.tolerance)&&(a.baked.size&&a.baked.size[0]===c[0]&&a.baked.size[1]===c[1]||a.baked.bake(c),a.baked.intersect(m,g,h))}};a.prototype.computeAttachmentOrigin=function(b,a){b=b.data;return(b="getVertexAttr"in b?b.getVertexAttr():"vertexAttr"in b?b.vertexAttr:null)?v.computeAttachmentOriginLines(b[e.PathVertexAttrConstants.POSITION],null,a):null};a.prototype.createBufferWriter=function(){return new D(this.vertexBufferLayout)};a.prototype.createRenderer=function(b,a){return new A(b,
a,this,e.pathVertexAttributeLocations)};a.prototype.getGLMaterials=function(){return{color:E,depth:F,depthShadowMap:this.params.castShadows?G:null,normal:H,highlight:I}};a.getVertexBufferLayout=function(b){var a=u.newLayout().vec3f(e.PathVertexAttrConstants.POSITION).vec4f(e.PathVertexAttrConstants.PROFILERIGHT).vec4f(e.PathVertexAttrConstants.PROFILEUP).vec4f(e.PathVertexAttrConstants.PROFILEVERTEXANDNORMAL);if(b.vvColorEnabled||b.vvSizeEnabled||b.vvOpacityEnabled)a=a.vec4f(e.PathVertexAttrConstants.FEATUREVALUE);
return a};return a}(w.Material);h=function(c){function a(a){var b=c.call(this,a)||this;b.output=a.output;b.updateParameters();return b}g(a,c);a.prototype.updateParameters=function(){this.technique=this.techniqueRep.acquireAndReleaseExisting(e.PathTechnique,this.material.getTechniqueConfig(this.output),this.technique)};a.prototype.beginSlot=function(a){return a===(this.technique.configuration.transparent?6:4)};a.prototype.getProgram=function(){return this.technique.program};a.prototype.getPrograms=
function(){return null};a.prototype._updateShadowState=function(a){a.shadowMappingEnabled!==this.technique.configuration.receiveShadows&&(this.material.setParameterValues({receiveShadows:a.shadowMappingEnabled}),this.updateParameters())};a.prototype.bind=function(a,c){0===this.output&&this._updateShadowState(c);a.bindProgram(this.technique.program);this.technique.bindPipelineState(a);this.technique.bindPass(a,this.material.getPassParameters(),c)};a.prototype.release=function(){};a.prototype.bindView=
function(a){this.technique.bindDraw(a)};a.prototype.bindInstance=function(a){this.technique.bindInstance(a)};a.prototype.getDrawMode=function(){return 4};return a}(h.GLMaterial);var E=function(c){function a(a){return c.call(this,f({},a,{output:0}))||this}g(a,c);return a}(h),F=function(c){function a(a){return c.call(this,f({},a,{output:1}))||this}g(a,c);return a}(h),G=function(c){function a(a){return c.call(this,f({},a,{output:3}))||this}g(a,c);return a}(h),H=function(c){function a(a){return c.call(this,
f({},a,{output:2}))||this}g(a,c);return a}(h),I=function(c){function a(a){return c.call(this,f({},a,{output:4}))||this}g(a,c);return a}(h),C=f({size:[1,1,1],ambient:[.2,.2,.2],diffuse:[.8,.8,.8],specular:[0,0,0],opacity:1,doubleSided:!1,doubleSidedType:"normal",receiveSSAO:!0,receiveShadows:!1,castShadows:!0,slicePlaneEnabled:!1,transparent:!1},y.Default),D=function(){function c(a){this.vertexBufferLayout=a}c.prototype.allocate=function(a){return this.vertexBufferLayout.createBuffer(a)};c.prototype.elementCount=
function(a){return a.indices[e.PathVertexAttrConstants.POSITION].length};c.prototype.write=function(a,b,c,f){var d=function(a){if(a in b.vertexAttr){var d=b.vertexAttr[a],e=b.indices[a];B(4===d.size);var g=c.getField(a,t.BufferViewVec4f);if(g)l.writeBufferVec4(e,d.data,g,f);else throw Error("unable to acquire view for "+a);}};d(e.PathVertexAttrConstants.PROFILERIGHT);d(e.PathVertexAttrConstants.PROFILEUP);d(e.PathVertexAttrConstants.PROFILEVERTEXANDNORMAL);this.vertexBufferLayout.hasField(e.PathVertexAttrConstants.FEATUREVALUE)&&
d(e.PathVertexAttrConstants.FEATUREVALUE);l.writeDefaultAttributes(b,this.vertexBufferLayout,a.transformation,a.invTranspTransformation,c,f)};return c}();return k});