// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.14/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../../../../core/tsSupport/makeTemplateObjectHelper","../util/ScreenSizePerspective.glsl","../../shaderModules/interfaces"],function(q,f,a,p,b){Object.defineProperty(f,"__esModule",{value:!0});f.VerticalOffset=function(d,e){var c=d.vertex.code;e.verticalOffsetEnabled&&(d.vertex.uniforms.add("verticalOffset","vec4"),e.screenSizePerspectiveEnabled&&(d.include(p.ScreenSizePerspective),d.vertex.uniforms.add("screenSizePerspectiveAlignment","vec4")),c.add(b.glsl(g||(g=
a(["\n    vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n      float viewDistance \x3d length((view * vec4(worldPos, 1.0)).xyz);\n    "],["\n    vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n      float viewDistance \x3d length((view * vec4(worldPos, 1.0)).xyz);\n    "])))),0===e.viewingMode?c.add(b.glsl(h||(h=a(["\n      vec3 worldNormal \x3d normalize(worldPos + localOrigin);\n    "],["\n      vec3 worldNormal \x3d normalize(worldPos + localOrigin);\n    "])))):
c.add(b.glsl(k||(k=a(["\n      vec3 worldNormal \x3d vec3(0.0, 0.0, 1.0);\n    "],["\n      vec3 worldNormal \x3d vec3(0.0, 0.0, 1.0);\n    "])))),e.screenSizePerspectiveEnabled?c.add(b.glsl(l||(l=a(["\n      float cosAngle \x3d dot(worldNormal, normalize(worldPos - camPos));\n      float verticalOffsetScreenHeight \x3d screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);\n    "],["\n      float cosAngle \x3d dot(worldNormal, normalize(worldPos - camPos));\n      float verticalOffsetScreenHeight \x3d screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);\n    "])))):
c.add(b.glsl(m||(m=a(["\n      float verticalOffsetScreenHeight \x3d verticalOffset.x;\n    "],["\n      float verticalOffsetScreenHeight \x3d verticalOffset.x;\n    "])))),c.add(b.glsl(n||(n=a(["\n      float worldOffset \x3d clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);\n      return worldNormal * worldOffset;\n    }\n    "],["\n      float worldOffset \x3d clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);\n      return worldNormal * worldOffset;\n    }\n    "])))))};
var g,h,k,l,m,n});