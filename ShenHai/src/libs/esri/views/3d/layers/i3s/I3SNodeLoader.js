// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.14/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/tsSupport/generatorHelper ../../../../core/tsSupport/awaiterHelper ../../../../core/has ../../../../core/lang ../../../../core/promiseUtils ../../../../core/urlUtils ../../../../libs/draco/DracoDecoder ./I3SBinaryReader ./I3SMaterialUtil ./I3SUtil".split(" "),function(m,L,x,y,I,J,n,p,K,t,C,q){m=function(){function b(a,e,d,c,f,b){this.streamDataController=e;this.logger=d;this.defaultGeometrySchema=c;this.requiredAttributes=f;this.options=b;this.layerUrl=a.parsedUrl.path;
this.geometryDefinitions=a.geometryDefinitions;if(a.materialDefinitions){var g=a.textureSetDefinitions;this.materialAndTextures=a.materialDefinitions.map(function(a){return C.getMaterialAndTextures(g,a)})}}b.prototype.load=function(a,e,d){return this.streamDataController.request(a,e,{signal:d})};b.prototype.loadAttribute=function(a,e,d){return this.load(this.layerUrl+"/nodes/"+a.resources.attributes+"/attributes/"+e.key+"/0","binary",d).then(function(a){return t.readBinaryAttribute(e,a)})};b.prototype.loadAttributes=
function(a,e,d){var c=this;return n.eachAlways(e.map(function(e){return c.loadAttribute(a,e.attributeStorageInfo,d)})).then(function(d){for(var b={},g=0;g<e.length;++g)d[g].value?b[e[g].name]=d[g].value:n.isAbortError(d[g].error)||c.logger.error("Failed to load attributeData for '"+e[g].name+"' on node '"+a.id+"'");return b})};b.prototype.loadNodeData=function(a,e){return y(this,void 0,void 0,function(){var d,b,f,h,g,u,z,v,m,r,p,A,q,D,w,B,E,y,F,G,H;return x(this,function(c){switch(c.label){case 0:d=
null!=this.requiredAttributes&&a.resources.attributes?this.loadAttributes(a,this.requiredAttributes,e):n.resolve({});var k=this.geometryDefinitions;c={bufferDefinition:null,bufferIndex:0};if(!(null==k||0>a.resources.geometryDefinition)&&(k=0<=a.resources.geometryDefinition?k[a.resources.geometryDefinition].geometryBuffers:null,null!=k))for(var l=0;l<k.length;l++)if(null!=k[l].compressedAttributes){if("draco"===k[l].compressedAttributes.encoding&&K.isSupported()&&!I("disable-feature:i3s-draco")){c.bufferIndex=
l;c.bufferDefinition=k[l];break}}else c.bufferIndex=l,c.bufferDefinition=k[l];b=c;f=b.bufferDefinition;h=b.bufferIndex;g=a.resources.geometry?this.loadGeometry(a,h,e):null;return a.resources.hasSharedResource?[4,this.loadShared(a,e)]:[3,2];case 1:return z=c.sent(),[3,3];case 2:z=null,c.label=3;case 3:return u=z,m=(v=this.materialAndTextures&&0<=a.resources.materialDefinition?this.materialAndTextures[a.resources.materialDefinition]:null!=u?C.getMaterialAndTexturesFromShared(u):null)&&v.material,r=
v&&v.textures,this.options.loadFeatureData?[4,this.loadFeatureData(a,e)]:[3,5];case 4:return A=c.sent(),[3,6];case 5:A=null,c.label=6;case 6:return p=A,q=this.options.loadFeatureData?this.collectGeometries(p):this.meshPyramidGeometryData(m),D=null!=r&&0<r.length?this.loadTextures(a,r,e):null,B=w=null,g?[4,g]:[3,8];case 7:w=c.sent();k=this.defaultGeometrySchema;l=u;if(k&&l&&l.materialDefinitions){var x=Object.keys(l.materialDefinitions)[0];!l.materialDefinitions[x].params.vertexRegions&&k.vertexAttributes.region&&
(k=J.clone(k),delete k.vertexAttributes.region)}E=k;B=(y=!(!f||!f.compressedAttributes||"draco"!==f.compressedAttributes.encoding))?t.createGeometryIndexFromAttributes(f.compressedAttributes.attributes):f?t.createGeometryIndexFromDefinition(f,a.vertexCount,a.numFeatures):t.createGeometryIndexFromSchema(w,E);c.label=8;case 8:return[4,D];case 9:return F=c.sent(),[4,d];case 10:return H=(G=c.sent())?{attributeData:G,loadedAttributes:this.requiredAttributes}:null,[2,{allGeometryData:q,attributeDataInfo:H,
geometryBuffer:w,geometryIndex:B,requiredTextures:r,textureData:F}]}})})};b.addAbsoluteHrefTexture=function(a,e){a=a.textureDefinitions;if(null!=a)for(var d=0,c=Object.keys(a);d<c.length;d++)for(var b=0,h=a[c[d]].images;b<h.length;b++){var g=h[b];Array.isArray(g.href)?g.hrefConcat=g.href.map(function(a){return p.makeAbsolute(a,e)}):g.hrefConcat=p.makeAbsolute(g.href,e)}};b.fixTextureEncodings=function(a){a=a.textureDefinitions;if(null!=a)for(var b in a){var d=a[b];if(Array.isArray(d.encoding))for(var c=
0;c<d.encoding.length;c++){var f=d.encoding[c];"data:"===f.substring(0,5)&&(d.encoding[c]=f.substring(5))}else f=d.encoding,"data:"===f.substring(0,5)&&(d.encoding=f.substring(5))}};b.prototype.loadShared=function(a,e){var d=this.layerUrl+"/nodes/"+a.resources.geometry+"/shared";return this.load(d,"json",e).then(function(a){b.fixTextureEncodings(a);b.addAbsoluteHrefTexture(a,d);return a})};b.prototype.loadTexture=function(a,b,d,c,f,h){return f===q.DDS_ENCODING_STRING?this.load(a,"binary",h).then(function(a){return{id:b,
usage:d,data:a,encoding:f}}):this.load(a,"image",h).then(function(a){var e=a;if(c&&4096<=a.width*a.height){var e=Math.ceil(a.width/2),g=Math.ceil(a.height/2),h=document.createElement("canvas");h.width=e;h.height=g;h.getContext("2d").drawImage(a,0,0,e,g);e=h}return{id:b,usage:d,data:e,encoding:f}})};b.prototype.loadTextures=function(a,e,d){var c=this,f=this.options.textureFormat===b.TextureFormat.Compressed,h=this.options.textureFormat===b.TextureFormat.Downsampled,g=this.options.textureUsageMask;
return n.all(e.map(function(b){if(0===(b.usage&g))return null;var e=q.selectEncoding(b.encodings,f);return null==e?(c.logger.error("No known encoding for texture found on node "+a.id),n.reject()):c.loadTexture(c.layerUrl+"/nodes/"+(a.resources.texture||a.id)+"/textures/"+e.name,b.id,b.usage,h,e.encoding,d)}))};b.prototype.meshPyramidGeometryData=function(a){return[{featureIds:[],geometries:[{type:"ArrayBufferView",params:{material:a}}],featureDataPosition:[0,0,0]}]};b.prototype.collectGeometries=
function(a){var b=[],d=0;for(a=a.featureData;d<a.length;d++){var c=a[d],f=c.geometries;if(null!=f)for(var h=0;h<f.length;h++)b.push({featureIds:[c.id],featureDataPosition:c.position,geometries:[f[h]]});else null!=c.position&&b.push({featureIds:[c.id],featureDataPosition:c.position,geometries:null})}return b};b.prototype.loadFeatureData=function(a,b){return this.load(this.layerUrl+"/nodes/"+a.id+"/features/0","json",b)};b.prototype.loadGeometry=function(a,b,d){return this.load(this.layerUrl+"/nodes/"+
a.resources.geometry+"/geometries/"+b,"binary",d)};return b}();(function(b){b=b.TextureFormat||(b.TextureFormat={});b[b.Compressed=0]="Compressed";b[b.Normal=1]="Normal";b[b.Downsampled=2]="Downsampled"})(m||(m={}));return m});