// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.14/esri/copyright.txt for details.
//>>built
define("require exports ../../../../geometry ../../../../core/mathUtils ../../../../core/screenUtils ../../../../core/libs/gl-matrix-2/vec3 ../../../../core/libs/gl-matrix-2/vec3f64 ../../../../support/elevationInfoUtils ../../support/geometryUtils ../../support/projectionUtils ../../support/geometryUtils/plane ../../support/geometryUtils/ray".split(" "),function(y,f,u,v,p,d,k,m,w,x,r,q){function n(a){return function(b,c){return(b=a.toMap(b))&&x.pointToPoint(b,b,c)?b:null}}function l(a,b){var c=p.createScreenPointArray(),
d=q.create(),g=k.vec3f64.create();return function(h,f){p.screenPointObjectToArray(h,c);q.fromScreenAtEye(a.state.camera,c,d);h=a.renderCoordsHelper.intersectManifoldClosestSilhouette(d,b,g);return a.renderCoordsHelper.fromRenderCoords(h,f)}}Object.defineProperty(f,"__esModule",{value:!0});f.createForGraphic=function(a,b,c){switch(m.getGraphicEffectiveElevationMode(b)){case "on-the-ground":return n(a);case "absolute-height":return b=a.toMap(c,{include:[b]}),l(a,b.z);default:return null}};f.createForGraphicAtLocation=
function(a,b,c){switch(m.getGraphicEffectiveElevationMode(b)){case "on-the-ground":return n(a);case "absolute-height":return l(a,c.z);default:return null}};f.createOnTheGround=n;f.createAbsoluteHeight=l;f.createCameraAlignedWorldUp=function(a,b){var c=k.vec3f64.create();if(!a.renderCoordsHelper.toRenderCoords(b,c))return null;var f=d.vec3.length(c),g=k.vec3f64.create();a.renderCoordsHelper.worldUpAtPosition(c,g);var h=r.create(),n=p.createScreenPointArray(),e=k.vec3f64.create(),l=q.create();return function(b,
k){var m=a.state.camera,t=d.vec3.cross(h,g,d.vec3.subtract(e,c,m.eye));d.vec3.cross(t,t,g);r.fromPositionAndNormal(c,t,h);q.fromScreenAtEye(m,p.screenPointObjectToArray(b,n),l);if(!r.intersectRay(h,l,e))return null;d.vec3.subtract(e,e,c);w.vector.projectPoint(g,e,e);"global"===a.viewingMode&&d.vec3.length(e)*v.sign(d.vec3.dot(g,e))<-f+.001&&d.vec3.subtract(e,d.vec3.scale(e,g,.001),c);d.vec3.add(e,e,c);return a.renderCoordsHelper.fromRenderCoords(e,new u.Point,k)}}});