// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.14/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/assignHelper ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/tsSupport/generatorHelper ../core/tsSupport/awaiterHelper ../PopupTemplate ../renderers ../request ../core/Error ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/watchUtils ../core/accessorSupport/decorators ../core/accessorSupport/PropertyOrigin ../core/accessorSupport/utils ./FeatureLayer ./Layer ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./mixins/SceneService ./support/commonProperties ./support/commonProperties ./support/FeatureReduction ./support/FeatureReductionSelection ./support/fieldProperties ./support/FieldsIndex ./support/fieldUtils ./support/I3SLayerDefinitions ./support/LabelClass ./support/labelingInfo ./support/RangeInfo ../portal/PortalItem ../renderers/support/jsonUtils ../renderers/support/styleUtils ../support/popupUtils ../tasks/support/Query".split(" "),
function(la,ma,q,I,d,n,g,J,K,v,h,L,M,N,r,O,P,c,z,Q,A,R,S,T,U,V,W,l,X,Y,Z,aa,ba,B,m,ca,C,da,ea,fa,ga,ha,ia){function D(c,b,a){c&&((c=fa.read(c,b,a)||void 0)||k.error("Failed to create renderer",{rendererDefinition:c,layer:this,context:a}));return c}var ja=["3DObject","Point"],k=L.getLogger("esri.layers.SceneLayer"),F=aa.defineFieldProperties(),G={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",
polygons:"polygons","features-polygons":"polygons"},ka={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};return function(E){function b(a,e){a=E.call(this,a)||this;a.featureReduction=null;a.rangeInfos=null;a.operationalLayerType="ArcGISSceneServiceLayer";a.type="scene";a.fields=null;a.outFields=null;a.nodePages=null;a.materialDefinitions=null;a.textureSetDefinitions=null;a.geometryDefinitions=null;a.serviceUpdateTimeStamp=null;a.definitionExpression=null;a.path=null;a.labelsVisible=
!0;a.labelingInfo=null;a.legendEnabled=!0;a.cachedDrawingInfo={color:!1};a.popupEnabled=!0;a.popupTemplate=null;a.objectIdField=null;a.objectIdFilter=null;a._fieldUsageInfo={};a.screenSizePerspectiveEnabled=!0;return a}I(b,E);b.prototype.normalizeCtorArgs=function(a,e){return"string"===typeof a?q({url:a},e):a};b.prototype.getField=function(a){return this.fieldsIndex.get(a)};b.prototype.getFieldDomain=function(a){return(a=this.getField(a))&&a.domain?a.domain:null};Object.defineProperty(b.prototype,
"fieldsIndex",{get:function(){return new ba(this.fields)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"elevationInfo",{set:function(a){this._set("elevationInfo",a);this.loaded&&this._validateElevationInfo()},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"geometryType",{get:function(){return ka[this.profile]||"mesh"},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"renderer",{set:function(a){B.fixRendererFields(a,this.fields);this._set("renderer",
a)},enumerable:!0,configurable:!0});b.prototype.readCachedDrawingInfo=function(a){if(null==a||"object"!==typeof a)a={};null==a.color&&(a.color=!1);return a};Object.defineProperty(b.prototype,"defaultPopupTemplate",{get:function(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null},enumerable:!0,configurable:!0});b.prototype.readObjectIdField=function(a,e){!a&&e.fields&&e.fields.some(function(e){"esriFieldTypeOID"===e.type&&(a=e.name);return!!a});return a||void 0};
b.prototype.readProfile=function(a,e){a=e.store.profile;if(null!=a&&G[a])return G[a];k.error("Unknown or missing profile",{profile:a,layer:this});return"mesh-pyramids"};b.prototype.load=function(a){var e=this,b=M.isSome(a)?a.signal:null;a=this.loadFromPortal({supportedTypes:["Scene Service"]},a).then(function(){return e._fetchService(b)},function(){return e._fetchService(b)}).then(function(){return r.all([e._verifyRootNodeAndUpdateExtent(e.nodePages,b),e._setAssociatedFeatureLayer(b)])}).then(function(){return e._validateElevationInfo()}).then(function(){return e._applyAssociatedLayerOverrides()}).then(function(){return e._populateFieldUsageInfo()}).then(function(){return ga.loadStyleRenderer(e,
{origin:"service"},b)}).then(function(){return B.fixRendererFields(e.renderer,e.fields)});this.addResolvingPromise(a);return this.when()};b.prototype.createQuery=function(){var a=new ia;"mesh"!==this.geometryType&&(a.returnGeometry=!0,a.returnZ=!0);a.where=this.definitionExpression||"1\x3d1";a.sqlFormat="standard";return a};b.prototype.queryExtent=function(a,e){var b=this;return this._getAssociatedLayerForQuery().then(function(f){return f.queryExtent(a||b.createQuery(),e)})};b.prototype.queryFeatureCount=
function(a,e){var b=this;return this._getAssociatedLayerForQuery().then(function(f){return f.queryFeatureCount(a||b.createQuery(),e)})};b.prototype.queryFeatures=function(a,e){var b=this;return this._getAssociatedLayerForQuery().then(function(f){return f.queryFeatures(a||b.createQuery(),e)}).then(function(a){if(a&&a.features)for(var e=0,f=a.features;e<f.length;e++){var c=f[e];c.layer=b;c.sourceLayer=b}return a})};b.prototype.queryObjectIds=function(a,e){var b=this;return this._getAssociatedLayerForQuery().then(function(f){return f.queryObjectIds(a||
b.createQuery(),e)})};b.prototype.getFieldUsageInfo=function(a){var b={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[a]||b:(k.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),b)};b.prototype.createPopupTemplate=function(a){return ha.createPopupTemplate(this,a)};b.prototype._getAssociatedLayerForQuery=function(){var a=this;if(!this.loaded)return this.load().then(function(){return a._getAssociatedLayerForQuery()});
var b=this.associatedLayer;return null!=b?r.resolve(b):r.reject(new h("scenelayer:query-not-available","SceneLayer queries are not available without associated feature layer"))};b.prototype.hasCachedStatistics=function(a){return null!=this.statisticsInfo&&this.statisticsInfo.some(function(b){return b.name===a})};b.prototype.queryCachedStatistics=function(a,b){return g(this,void 0,void 0,function(){var e,c,d,w,H;return n(this,function(f){switch(f.label){case 0:return[4,this.load(b)];case 1:f.sent();
if(!this.statisticsInfo)throw new h("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");e=this.fieldsIndex.get(a);if(!e)throw new h("scenelayer:field-unexisting","Field '"+a+"' does not exist on the layer");c=0;for(d=this.statisticsInfo;c<d.length;c++)if(w=d[c],w.name===e.name)return H=O.join(this.parsedUrl.path,w.href),[2,v(H,{query:{f:"json"},responseType:"json",signal:b?b.signal:null}).then(function(a){return a.data})];throw new h("scenelayer:no-cached-statistics",
"Cached statistics for this attribute are not available");}})})};b.prototype.validateLayer=function(a){if(a.layerType&&-1===ja.indexOf(a.layerType))throw new h("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:a.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new h("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(1<this.version.major)throw new h("layer:service-version-too-new",
"Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});a=this.normalReferenceFrame;var b=this.spatialReference,f=!1,c=!1;if(null==a)c=f=!0;else switch(b=b&&b.isGeographic,a){case "east-north-up":case "earth-centered":f=!0;c=b;break;case "vertex-reference-frame":f=!0;c=!b;break;default:f=!1}if(!f)throw new h("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!c)throw new h("scenelayer:incompatible-normal-reference-frame",
"Normal reference frame is incompatible with layer spatial reference.");};b.prototype._populateFieldUsageInfo=function(){this._fieldUsageInfo={};if(this.fields)for(var a=function(a){var e=!(!b.attributeStorageInfo||!b.attributeStorageInfo.some(function(b){return b.name===a.name})),c=!!(b.associatedLayer&&b.associatedLayer.fields&&b.associatedLayer.fields.some(function(b){return b&&a.name===b.name}));b._fieldUsageInfo[a.name]={supportsLabelingInfo:e,supportsRenderer:e,supportsPopupTemplate:e||c,supportsLayerQuery:c}},
b=this,c=0,d=this.fields;c<d.length;c++)a(d[c])};b.prototype._applyAssociatedLayerOverrides=function(){if(this.associatedLayer){if(this.associatedLayer.fields){for(var a=null,b=0,c=this.associatedLayer.fields;b<c.length;b++){var d=c[b];this.getField(d.name)||(a||(a=this.fields?this.fields.slice():[]),a.push(d.clone()))}a&&this._set("fields",a)}a=["popupTemplate","popupEnabled"];b=Q.getProperties(this);for(c=0;c<a.length;c++)d=a[c],this._buddyIsMoreImportant(d)&&(b.setDefaultOrigin(this.associatedLayer.originOf(d)),
b.set(d,this.associatedLayer[d]),b.setDefaultOrigin("user"))}};b.prototype._setAssociatedFeatureLayer=function(a){return g(this,void 0,void 0,function(){var b;return n(this,function(c){switch(c.label){case 0:return[4,this._fetchAssociatedFeatureLayer(a)];case 1:return this.associatedLayer=b=c.sent(),[2]}})})};b.prototype._fetchAssociatedFeatureLayer=function(a){return g(this,void 0,void 0,function(){var b;return n(this,function(c){switch(c.label){case 0:if(-1===["mesh-pyramids","points"].indexOf(this.profile))return[2,
null];c.label=1;case 1:return c.trys.push([1,4,,5]),[4,this.portalItem&&this.portalItem.isResolved()?this._fetchAssociatedFeatureLayerFromRelatedItems(this.portalItem,a):this._fetchAssociatedFeatureLayerFromUrl(a)];case 2:return b=c.sent(),[4,b.load({signal:a})];case 3:return[2,c.sent()];case 4:return c.sent(),this._logWarningOnPopupEnabled(),[2,null];case 5:return[2]}})})};b.prototype._logWarningOnPopupEnabled=function(){var a=this;P.whenValidOnce(this,["popupTemplate","popupEnabled"],function(){return a.popupEnabled&&
null!=a.popupTemplate}).then(function(){return function(){var b="this SceneLayer: "+a.title;null==a.attributeStorageInfo?k.warn("Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on "+b):k.info("Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on "+b)}})};b.prototype._fetchAssociatedFeatureLayerFromRelatedItems=function(a,b){return g(this,void 0,void 0,function(){var c,e;return n(this,function(d){switch(d.label){case 0:return d.trys.push([0,
4,,5]),[4,a.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:b})];case 1:return c=d.sent(),(e=c.filter(function(a){return"Feature Service"===a.type})[0])?[4,this._fetchAssociatedFeatureLayerFromPortalItem(new ea({id:e.id,portal:e.portal}),b)]:[3,3];case 2:return[2,d.sent()];case 3:throw Error();case 4:return d.sent(),[2,this._fetchAssociatedFeatureLayerFromUrl(b)];case 5:return[2]}})})};b.prototype._fetchAssociatedFeatureLayerFromPortalItem=function(a,b){return g(this,
void 0,void 0,function(){var c;return n(this,function(d){switch(d.label){case 0:return[4,a.load({signal:b})];case 1:return d.sent(),[4,this._findMatchingAssociatedSublayerUrl(a.url,b)];case 2:return c=d.sent(),[2,new A({url:c,portalItem:a})]}})})};b.prototype._fetchAssociatedFeatureLayerFromUrl=function(a){return g(this,void 0,void 0,function(){var b;return n(this,function(c){switch(c.label){case 0:return[4,this._findMatchingAssociatedSublayerUrl(null,a)];case 1:return b=c.sent(),[2,new A({url:b})]}})})};
b.prototype._findMatchingAssociatedSublayerUrl=function(a,b){void 0===a&&(a=null);return g(this,void 0,void 0,function(){var c,d,e,h,g,k,l,m,x,y,u,p,t,q;return n(this,function(f){switch(f.label){case 0:c=this.parsedUrl.path.match(/^(.*)\/SceneServer\/layers\/([\d]*)\/?$/i);if(!c)return[2,r.reject()];null==a&&(a=c[1]+"/FeatureServer");d=a.replace(/^(.*FeatureServer)(\/[\d]*\/?)?$/i,"$1");e={query:{f:"json"},responseType:"json",authMode:"no-prompt",signal:b};h=c[1]+"/SceneServer";g=parseInt(c[2],10);
k=v(h,e).catch(function(){return{data:{layers:null}}});l=v(d,e);return[4,r.all([l,k])];case 1:m=f.sent();x=m[0];y=m[1];u=y.data&&y.data.layers;p=x.data&&x.data.layers;if(!Array.isArray(p))throw Error("expected layers array");if(Array.isArray(u))for(t=0;t<Math.min(u.length,p.length);t++){if(q=u[t],q.id===g)return[2,d+"/"+p[t].id]}else if(g<p.length)return[2,d+"/"+p[g].id];throw Error("could not find matching associated sublayer");}})})};b.prototype._buddyIsMoreImportant=function(a){if(!this.associatedLayer)return!1;
var b=z.nameToId(this.originOf(a));a=z.nameToId(this.associatedLayer.originOf(a));return null!=a&&2>=a?null==b||2>b:null!=a&&3>=a?null==b||3>b:!1};b.prototype._validateElevationInfo=function(){var a=this.elevationInfo;a&&("mesh-pyramids"===this.profile&&"absolute-height"!==a.mode&&k.warn(".elevationInfo\x3d","Mesh scene layers only support absolute-height elevation mode"),a.featureExpressionInfo&&"0"!==a.featureExpressionInfo.expression&&k.warn(".elevationInfo\x3d","Scene layers do not support featureExpressionInfo"))};
d([c.property({types:{key:"type",base:Y.default,typeMap:{selection:Z.default}},json:{origins:{"web-scene":{read:{source:"layerDefinition.featureReduction"},write:{target:"layerDefinition.featureReduction"}}}}})],b.prototype,"featureReduction",void 0);d([c.property({type:[da.default],json:{read:!1,origins:{"web-scene":{read:{source:"layerDefinition.rangeInfos"},write:{target:"layerDefinition.rangeInfos"}}}}})],b.prototype,"rangeInfos",void 0);d([c.property({json:{read:!1}})],b.prototype,"associatedLayer",
void 0);d([c.property({type:["show","hide"]})],b.prototype,"listMode",void 0);d([c.property({type:["ArcGISSceneServiceLayer"]})],b.prototype,"operationalLayerType",void 0);d([c.property({json:{read:!1},readOnly:!0})],b.prototype,"type",void 0);d([c.property(q({},F.fields,{readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}}))],b.prototype,"fields",void 0);d([c.property({readOnly:!0,dependsOn:["fields"]})],b.prototype,"fieldsIndex",null);d([c.property(F.outFields)],b.prototype,"outFields",void 0);
d([c.property({type:m.I3SNodePageDefinition,readOnly:!0})],b.prototype,"nodePages",void 0);d([c.property({type:[m.I3SMaterialDefinition],readOnly:!0})],b.prototype,"materialDefinitions",void 0);d([c.property({type:[m.I3STextureSetDefinition],readOnly:!0})],b.prototype,"textureSetDefinitions",void 0);d([c.property({type:[m.I3SGeometryDefinition],readOnly:!0})],b.prototype,"geometryDefinitions",void 0);d([c.property({readOnly:!0})],b.prototype,"serviceUpdateTimeStamp",void 0);d([c.property({readOnly:!0})],
b.prototype,"attributeStorageInfo",void 0);d([c.property({readOnly:!0})],b.prototype,"statisticsInfo",void 0);d([c.property({type:String,json:{origins:{service:{read:!1,write:!1}},read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],b.prototype,"definitionExpression",void 0);d([c.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],b.prototype,"path",void 0);d([c.property(l.elevationInfo)],b.prototype,"elevationInfo",
null);d([c.property({type:String,dependsOn:["profile"]})],b.prototype,"geometryType",null);d([c.property(l.labelsVisible)],b.prototype,"labelsVisible",void 0);d([c.property({type:[ca],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:C.reader},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:C.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],b.prototype,"labelingInfo",void 0);d([c.property(l.legendEnabled)],
b.prototype,"legendEnabled",void 0);d([c.property(l.opacityDrawingInfo)],b.prototype,"opacity",void 0);d([c.property({types:K.webSceneRendererTypes,json:{origins:{service:{read:{source:"drawingInfo.renderer",reader:D}}},read:{source:"layerDefinition.drawingInfo.renderer",reader:D},write:{target:"layerDefinition.drawingInfo.renderer"}},value:null})],b.prototype,"renderer",null);d([c.property({json:{read:!1}})],b.prototype,"cachedDrawingInfo",void 0);d([c.reader("service","cachedDrawingInfo")],b.prototype,
"readCachedDrawingInfo",null);d([c.property(l.popupEnabled)],b.prototype,"popupEnabled",void 0);d([c.property({type:J,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],b.prototype,"popupTemplate",void 0);d([c.property({readOnly:!0,json:{read:!1},dependsOn:["fields","title","attributeStorageInfo","associatedLayer"]})],b.prototype,"defaultPopupTemplate",null);d([c.property({type:String,json:{read:!1}})],b.prototype,"objectIdField",void 0);d([c.reader("service","objectIdField",["objectIdField",
"fields"])],b.prototype,"readObjectIdField",null);d([c.property({json:{read:!1}})],b.prototype,"objectIdFilter",void 0);d([c.property({type:String,json:{read:!1}})],b.prototype,"profile",void 0);d([c.reader("service","profile",["store.profile"])],b.prototype,"readProfile",null);d([c.property({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],b.prototype,"normalReferenceFrame",void 0);d([c.property(X.screenSizePerspectiveEnabled)],b.prototype,
"screenSizePerspectiveEnabled",void 0);return b=d([c.subclass("esri.layers.SceneLayer")],b)}(c.declared(V.ScaleRangeLayer(W.SceneService(S.ArcGISService(T.OperationalLayer(U.PortalLayer(N.MultiOriginJSONMixin(R))))))))});